<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/okfn/ckan/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>https://github.com/okfn/ckan.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <quietPeriod>250</quietPeriod>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/sh
PYENV=$WORKSPACE/pyenv

cd $WORKSPACE

# Delete stuff from last time.
rm -rf 2206132 $PYENV development.ini data sstore ckan/migration/versions/*.pyc

# Clone the virtualenv bootstrap script for installing CKAN and its dependencies.
git clone git://gist.github.com/2206132.git

# Run the script to create a new pyenv and install CKAN and its dependencies into it.
python 2206132/ckan-bootstrap.py pyenv --ckan-location=$WORKSPACE/

# Absolutely hardcode shell-scripting action.
sed &apos;s|#solr_url = http://127.0.0.1:8983/solr|solr_url = http://127.0.0.1:8983/solr|&apos; &lt;development.ini &gt;development.ini.1
sed &apos;s|# ckan.site_id = ckan.net|ckan.site_id = ckan.net|&apos; &lt;development.ini.1 &gt;development.ini.2
mv development.ini.2 development.ini
rm development.ini.1

# Activate the pyenv and run the tests.
. $PYENV/bin/activate

# Rebuild db in case model is different from one commit to another.
paster db clean
paster db create-from-model

# Run the tests.
nosetests --ckan --with-pylons=test-core.ini --with-xunit ckan ckanext</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers/>
</project>